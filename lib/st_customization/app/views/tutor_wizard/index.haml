// main block for all wizard steps
.page-content-inner.wizard.wizard-instructor
  .head-section
    %h1.head-section-title Set up your profile
  = render partial: 'wizard_head'
  .wizard-section
    %h2.small-title.flex-block 
      .title-image-holder
        = image_tag "custom_images/medal.png"
      Payment Info
    .wizard-content
      .wizard-inner
        .need-upload.lined
          - if @just_created && @stripe_account_ready
            %span.stripe_setup_success
              Stripe account was successfully created!
          %p Payment info..
          .payment_container
          = render partial: 'custom_payment_settings/stripe_wizard', locals: index_view_locals
        // = link_to "Next", public_send(@next_step_path), class: 'btn btn--violet get-badge'
        = link_to "Back", @prev_step_path, class: 'confirm_step_btn btn btn--green get-badge', remote: true
        - stripe_seller_ready = index_view_locals[:stripe_account] && index_view_locals[:stripe_account][:stripe_seller_id].present?
        - if stripe_seller_ready
          %p
            = link_to "Next", @confirm_step_path, class: 'confirm_step_btn btn btn--violet get-badge', remote: true
      %span.errors



// %p
//   = link_to "Confirm Step", @confirm_step_path, class: 'confirm_step_btn btn btn--violet', remote: true

= render partial: 'confirm_step_btn_js'

-# :javascript
-#   onDocumentReady(function(){
-#     $("#stripe-account-form").on("ajax:success", function(event, data){
-#           //console.log(data);
-#           //console.log("#{@confirm_step_path}");
-#           $.get("#{@confirm_step_path}", function(data){
-#             if (data.success == true) {
-#               document.location = data.new_step_url
-#             } else {
-#               $(".errors").html('Step is incomplete!')
-#             }
-#           });
-#         }
-#       ).on("ajax:error", function(event, data){
-#           //console.log(data);
-#           $(".errors").html('Error:')
-#           var err_obj = data.responseJSON.error
-#           Object.keys(err_obj).forEach(function (key) { 
-#             var value = err_obj[key]
-#             $(".errors").append(key + ': ' + value[0]);
-#           })
-#         }
-#       )
-#   });

