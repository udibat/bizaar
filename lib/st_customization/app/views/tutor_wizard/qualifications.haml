// main block for all wizard steps
.page-content-inner.wizard.wizard-instructor
  .head-section
    %h1.head-section-title Set up your profile
  = render partial: 'wizard_head'
  // awards and certifications
  .wizard-section
    %h2.small-title.flex-block
      .title-image-holder
        = image_tag "custom_images/medal.png"
      Awards, certification and other qualifications (optional)
    .wizard-content
      .awards-head.lined
        %p.mb-25 Are you certified to teach? Do you have certifications related to what you plan to teach, or have you compted in tournaments? Tell us and tell your students!
        %p
          If you have photo proof of your qualifications, you can get a 
          %span.verify-sign
            = image_tag "homepage/medal.png", class: 'small-icon'
            %span.uppercase.green Competitor
          Badge or a
          %span.verify-sign
            = image_tag "homepage/certificate.png", class: 'small-icon'
            %span.uppercase.green Certified instructor

      .wizard-inner
        .uploading-form
          = form_for @new_certification, remote: true, html: { multipart: true, id: 'new_certification_form' } do |f|
            .need-upload
              .errors
              .mb-50
                %p From the dropdown, choose the Category that best describes the Qualification that you have in mind.
                .row
                  .col-6
                    = f.select :category_id, categories_for_select, {}, { id: "category-select", class: 'custom-select', data: {:placeholder => 'Choose a Category for your Qualification'} }
              .row.mb-50
                .col-6
                  %p Describe your qualification.
                  = f.text_field :name, placeholder: 'The name of your Qualification', class: "input"
              %p Upload photo proof of your qualification. Please upload documentation of your qualification to qualify for a badge. Only Bizaar staff will see and have access this photo- it will not be viewable by other Instructors or Members.

              .upload-files-holder
                .row
                  .col-6
                    = label_tag :certification_image, class: 'btn btn--black upload-link' do
                      .small-icon
                        %svg.svg-inline--fa.fa-file-upload.fa-w-12{"aria-hidden" => "true", "data-icon" => "file-upload", "data-prefix" => "fas", :focusable => "false", :role => "img", :viewbox => "0 0 384 512", :xmlns => "http://www.w3.org/2000/svg"}
                          %path{:d => "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z", :fill => "currentColor"}
                      Upload Files from computer
                = f.file_field :image
                .uploaded-file-container
                  -# .uploaded-file
                  -#   .thumb-block.uploaded-thumb-block
                  -#   .file-action-block
                  -#     .name File name
                  -#     = link_to 'Choose another photo', '#', class: 'green link underline'
                  -#     = link_to 'Remove this photo', '#', class: 'green link underline remove-preview'
                  -# = f.submit 'Get my badge!', class: "btn btn--violet get-badge"
          .row
            .col-6
              = link_to 'Get my badge!', '#', class: 'btn btn--green block submit_remote_form_btn'
            .col-6
              = link_to "Skip current step", tutor_wizard_skip_step_path(@tutor_status.signup_status), class: 'btn btn--violet block'
        .after-uploading
          %h3.small-title.flex-block
            .title-image-holder
              %svg.svg-inline--fa.fa-check-circle.fa-w-16{"aria-hidden" => "true", "data-icon" => "check-circle", "data-prefix" => "far", :focusable => "false", :role => "img", :viewbox => "0 0 512 512", :xmlns => "http://www.w3.org/2000/svg"}
                %path{:d => "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z", :fill => "#fff"}

            %span Thank you for uploading your documents! We will review the documents, and notify you when itâ€™s approved.
        .added-certifications-holder
          %h3.section-subtitle Added Qualifications:
          .existing_certifications
            - @existing_certifications.each do |certification|
              .certificate-item
                .thumb-block
                  = image_tag certification.image.url(:thumb), class: 'image'
                .certificate-description
                  .file-name.qualification-name
                    = certification.name
                  .file-name.category-name
                    = certification.category_name
                  = label :_destroy, 'Remove this photo', class: 'green link underline remove-photo'
                  = check_box :_destroy, '', class: 'remove-checkbox'

          = link_to '+ Add another qualification', '#', class: 'underline uppercase add-another-qual'
        .row
          .col-6
            = link_to "Back", @prev_step_path, class: 'confirm_step_btn btn btn--violet-transp', remote: true
          .col-6
            = link_to "Next", @confirm_step_path, class: 'confirm_step_btn btn btn--violet', remote: true
          -# = link_to "Skip current step", tutor_wizard_skip_step_path(@tutor_status.signup_status), class: ''

= render partial: 'confirm_step_btn_js'

:javascript
  onDocumentReady(function() {
    var uploadedImageTemplate = '<div class="uploaded-file"><div class="thumb-block uploaded-thumb-block"></div><div class="file-action-block"><div class="name"></div><a href="#" class="green link underline remove-preview">Remove this photo</a></div></div>'

    document.getElementById('certification_image').addEventListener('change', function (e) {
      if('.uploaded-file') {
        $('.uploaded-file').remove();
      }
      var file = this.files[0];
      var reader = new FileReader();

      reader.onload = function(e) {
        var img = new Image();
        img.src = reader.result;
        
        $('.uploaded-file-container').append(uploadedImageTemplate)
        $('.uploaded-thumb-block').html(img);
      }
      
      reader.readAsDataURL(file);

    });
    
    $('.uploaded-file-container').on('click', '.remove-preview', function(event) {
      event.preventDefault();
      $('#certification_image').val('');
      $(this).parents('div').find('.uploaded-file').remove();
    });

    $('.submit_remote_form_btn').on('click', function(event) {
      event.preventDefault();
      event.stopPropagation();

      $("#new_certification_form").trigger('submit')
    });
      
    $("#new_certification_form").on('submit', function(e) {
      e.preventDefault();
      var formData = new FormData(this);

      $.ajax({
        type: "POST",
        url: $(this).attr('action'),
        data: formData,
        processData: false,
        contentType: false,
        success: function(data) {
          $('.after-uploading').show();
          $('.uploaded-file').hide();
          $('.existing_certifications').html('')
          data.existing_certifications.forEach(function(item, i) {
            var certificateItem = $('<div>', {class: 'certificate-item'});
            var imageHolder = $('<div>', {class: 'thumb-block'});
            var certificateDescription = $('<div>', {class: 'certificate-description'});

            var image = $('<img>',{src: item.image_thumb_url, alt: item.name});
            var qualification = $('<div class="qualification-name">' + item.name + '</div>');
            var category = $('<div class="category-name">' + item.category_name + '</div>')

            var destroyCheckbox = $('<input type="checkbox" class="remove-checkbox">');
            var destroyLabel = $('<label class="remove-photo" for="__destroy">').html('Remove this photo')
            
            certificateDescription.append(qualification, category, destroyLabel, destroyCheckbox);
            imageHolder.append(image);
            certificateItem.append(imageHolder, certificateDescription);

            $('.existing_certifications').append(certificateItem);

            $('.uploading-form').hide();
            clickOutside('.after-uploading');
          })
        },
        error: function(error) {
          var err_obj = error.responseJSON.error
          Object.keys(err_obj).forEach(function (key) { 
            var value = err_obj[key]
            $(".errors").append('<div class="error-item">' + key + ' ' + value[0] +'</div>');
          })

          clickOutside('.errors');
        }
      });
    });

    $('.add-another-qual').on('click', function(event) {
      event.preventDefault();
      $('.uploading-form').show();
    });
    // $("#new_certification_form").on("ajax:success", function(event, data){
    //   $('.existing_certifications').html('')
    //   data.existing_certifications.forEach(function(item, i){
    //     $('.existing_certifications').find('.thumb-block').html($('<img>',{src: item.image_thumb_url, alt: item.name}))
    //     $('.existing_certifications').append($('<div>'+ item.name + '</div>'))
    //     $('.existing_certifications').append($('<div>'+ item.category_name + '</div>'))
    //   })
    // }).on("ajax:error", function(event, data){
    //     console.log(data.responseJSON.error);
    //     $(".errors").html('Error:')
    //     var err_obj = data.responseJSON.error
    //     Object.keys(err_obj).forEach(function (key) { 
    //       var value = err_obj[key]
    //       $(".errors").append(key + ': ' + value[0]);
    //     })
    //   }
    // )
  });

