- target_user = @service.person
- content_for :javascript do
  initialize_update_profile_info_form("#{I18n.locale}","#{target_user.id.to_s}", #{@current_community.real_name_required?});

- content_for :extra_javascript do
  - maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
  - key_param = maps_key ? "?key=#{maps_key}" : ""
  - needs_maps = !FeatureFlagHelper.feature_enabled?(:topbar_v1) || search_mode == :keyword
  = javascript_include_tag "//maps.googleapis.com/maps/api/js#{key_param}" if needs_maps

- content_for :title_header do
  %h1= t("layouts.no_tribe.settings")

- if @service.admin_acts_as_person?
  - content_for :banner_warning do
    = t('settings.profile.editing_profile_of', name: target_user.full_name)

= render :partial => "layouts/left_hand_navigation", :locals => { :links => custom_settings_links_for(target_user, @current_community, @service.admin_acts_as_person?) }

#person_settings_form.left-navi-section.settings-section
  .settings-form
    .settings-title
      %h3.section-subtitle.violet= t("settings.profile.profile_title")
      = link_to '#', class: 'edit-settings-button' do
        .icon-edit
    -# %p
    -#   = t("settings.profile.these_fields_are_shown_in_your")
    -#   = link_to(t("settings.profile.profile_page"), target_user) + "."

    = form_for target_user do |form|
      .input-container
        .input-holder
          = form.label :given_name, t("settings.profile.given_name"), :class => "label"
          = form.text_field :given_name, :class => "text_field", :maxlength => "30"
        .input-holder
          .flex-block
            = form.label :family_name, t("settings.profile.family_name"), :class => "label"
            %small.extra-text
              - if ["first_name_with_initial", "first_name_only"].include? @current_community.name_display_type
                -# = t("settings.profile.#{@current_community.name_display_type}")
          = form.text_field :family_name, :class => "text_field", :maxlength => "30"
      -# Email
      .input-container
        .input-holder
          = form.label :email, t('admin.communities.manage_members.email'), class: 'label'
          = form.text_field :email, :class => :text_field, :maxlength => "255", :placeholder => t('admin.communities.manage_members.email')
        .input-holder
          = label_tag :city, t('admin.communities.manage_members.city'), class: 'label'
          = text_field_tag :city, '', :class => :text_field, :maxlength => "255", :placeholder => t('admin.communities.manage_members.city')


      .birthday-holder
        %h3.section-subtitle.section-subtitle--regular Birthday
        %p Your birthday is confidential. You do have to be 19 and older to sign up with us
        .input-container.custom-select-holder
          = form.date_select :birthday, order: [:month, :day, :year], :start_year => (Date.today.year - 100), :end_year => Date.today.year
      -# -# Display name
      -# .inline-label-container
      -#   = form.label :display_name, t("settings.profile.display_name"), class: "label"
      -# %span.alert-box-icon
      -#   = icon_tag("information", ["icon-fix"])
      -# %small
      -#   = t("settings.profile.display_name_description")
      -# = form.text_field :display_name, class: "text_field", :maxlength => "30"

      -# -# Location
      -# .inline-label-container
      -#   = form.label :street_address, t("settings.profile.street_address"), :class => "label"
      -#   %small
      -#     = t('settings.profile.default_in_listing')
      -# %span.alert-box-icon
      -#   = icon_tag("information", ["icon-fix"])
      -# %small
      -#   = t("settings.profile.location_description")
      -# = form.text_field :street_address, :class => "text_field", :onkeyup => "timed_input(this)"
      -# #settings_map_canvas.map
      -#   - content_for :extra_javascript do
      -#     :javascript
      -#       source = document.getElementById("person_street_address");
      -#       $(document).ready(function(){
      -#         googlemapMarkerInit("settings_map_canvas","person_location","person_street_address", true, #{tribe_latitude}, #{tribe_longitude});
      -#         });

      -# Phone number
      -# - show_phone_number = @service.fixed_phone_field?
      -# - if show_phone_number
      -#   .inline-label-container
      -#     = form.label :phone_number, t("settings.profile.phone_number"), :class => "label"
      -#     %small
      -#       = t('settings.profile.invisible')
      -#   = form.text_field :phone_number, :class => "text_field", :maxlength => "25"

      -# Profile picture

      .inline-label-container
        = form.label :image, t('settings.profile.change_profile_picture'), class: 'label'
      %span.alert-box-icon
        = icon_tag("information", ["icon-fix"])
      %small
        = t("settings.profile.profile_picture_description")
      .row
        .col-6
          = link_to 'Choose File', '#', class: 'btn btn--black upload-link trigger_upload'
      -# = render 'layouts/filename', file_field: target_user.image
      .uploaded-file-container.profile-upload
        = form.file_field :image, :size => 30, :id => "avatar_file", class: 'avatar-file'
        .uploaded-file
          .thumb-block
            = image_tag ''
          .file-action-block
            .file-name filename
            = link_to 'Choose another photo', '#', class: 'green link underline trigger_upload'

      -# About text
      = form.label :description, t("settings.profile.short_intro"), :class => "input"
      %p 
        Max #{CustomProfile::MAX_DESCRIPTION_LENGTH} characters / 
        %span.written-char 0
      = form.text_area :description, :class => "update_profile_description_text_area", maxlength: CustomProfile::MAX_DESCRIPTION_LENGTH
      = form.fields_for :location do |loc|
        = loc.hidden_field :address, :value => target_user.location.address
        = loc.hidden_field :google_address, :value => target_user.location.google_address
        = loc.hidden_field :latitude, :value => target_user.location.latitude
        = loc.hidden_field :longitude, :value => target_user.location.longitude
      - if @service.has_person_custom_fields?
        - @service.custom_field_values.each_with_index do |custom_field_value, index|
          .inline-label-container
          - custom_field = custom_field_value.question
          - custom_field.with_type do |field_type|
            - prefix = "person[custom_field_values_attributes][]"
            .inline-label-container
              = label "person_custom_fields", index, "#{custom_field.name(I18n.locale)}#{custom_field.required ? '*' : ''}",
                class: 'inline'
              - if custom_field.public?
                %small= t('settings.profile.shown_in_your_public_profile')
            = hidden_field_tag "#{prefix}[id]", custom_field_value.id
            = hidden_field_tag "#{prefix}[type]", custom_field_value.type
            = hidden_field_tag "#{prefix}[custom_field_id]", custom_field_value.custom_field_id
            = render "settings/custom_fields/#{field_type}", :service => @service,
              :custom_field => custom_field, index: index,
              :custom_field_value => custom_field_value,
              :prefix => prefix
      = form.button t("settings.save_information"), :class => "send_button"


:javascript
  onDocumentReady(function(){
    $('.trigger_upload').on('click', function(event) {
      event.preventDefault();
      $('input[type="file"]').trigger('click');
    });

    $('#avatar_file').on('change', function(event) {
      var file = this.files[0];
      var reader = new FileReader();
      var name = file.name;

      reader.onload = function(e) {
        var img = new Image();
        img.src = reader.result;

        $('.thumb-block').html(img);
        $('.file-name').html(name);
      }
      
      reader.readAsDataURL(file);

    });
  });
