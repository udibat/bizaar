- content_for :title_header do
  %h1= t("layouts.no_tribe.settings")

= render :partial => "layouts/left_hand_navigation", :locals => { :links => custom_settings_links_for(@current_user, @current_community) }

.left-navi-section.settings-section.id-verification-section
  .settings-form-
    .settings-title
      %h3.section-subtitle.violet= t(".title")
      = link_to '#', class: 'edit-settings-button' do
        .icon-edit
    // if user has been verified by admin - show verified-holder
    %span.errors
    - if @id_verification.status_pending?
      .pending-holder
        .bold.uppercase Pending...:
        .verify-sign.badge-holder
          = image_tag "custom_images/checked.png", class: 'small-icon'
          %span.uppercase.green.text Id verified
    - if @id_verification.status_approved?
      .verified-holder
        .bold.uppercase Your Id has been verified. You have the following badge:
        .verify-sign.badge-holder
          = image_tag "custom_images/checked.png", class: 'small-icon'
          %span.uppercase.green.text Id verified
    - if @id_verification.status_rejected?
      .rejected-holder
        .bold.uppercase Your Id has been rejected: #{@id_verification.rejection_reason}
        .verify-sign.badge-holder
          = image_tag "custom_images/checked.png", class: 'small-icon'
          %span.uppercase.green.text Id verified

    = form_for @id_verification, remote: true, format: :json, html: { multipart: true, id: 'id_verification_form', class: 'id_verification_form' }, authenticity_token: true do |f|
      // if user remove id verification block, this block should be shown
      .row
        .col-6
          .upload-files-holder
            .uploading-block
              = label_tag :id_verification_image, class: 'btn btn--black upload-link form-element' do
                .small-icon
                  %svg.svg-inline--fa.fa-file-upload.fa-w-12{"aria-hidden" => "true", "data-icon" => "file-upload", "data-prefix" => "fas", :focusable => "false", :role => "img", :viewbox => "0 0 384 512", :xmlns => "http://www.w3.org/2000/svg"}
                    %path{:d => "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z", :fill => "currentColor"}
                Upload Files from computer
              = f.file_field :image
              .uploaded-file-container.settings
                .pdfPreview.hidden-preview
                  = image_tag 'custom_images/pdf.png', class: 'image'
            - unless @id_verification.new_record?
              .fields_cont.existing_photo_record
                .thumb-block
                  = image_tag @id_verification.image.url(:thumb)
      .row.identification-type
        .col-6
          = label_tag :identification_type
          = f.text_field :identification_type, class: 'input', :placeholder => "Identification Type"
    = button_tag 'Save!', class: 'remote_ent_form_submit_btn form-element'
    = button_tag 'Delete', class: 'delete_verification_btn'

= render partial: 'view_tools/ajax_form_submit_handler'
- delete_path = id_verification_path(@id_verification.id) if @id_verification.id.present?

:javascript
  onDocumentReady(function() {
    $('.remote_ent_form_submit_btn').on("click", function(){
      formAjaxSubmit('#id_verification_form');
      $('.uploading-block').hide();
    });

    $('.delete_verification_btn').on('click', function(){
      //console.log($(this).data('certId'))
      var delete_url = "#{delete_path.to_s}";
      deleteItem(delete_url);
    });

    var uploadedImageTemplate = '<div class="uploaded-file"><div class="thumb-block uploaded-thumb-block"></div><div class="file-action-block"><div class="name"></div><a href="#" class="green link underline remove-preview">Remove this photo</a></div></div>'

    $('#id_verification_image').on('change', function(event) {
      if('.uploaded-file') {
        $('.uploaded-file').remove();
      }

      var file = this.files[0];
      var reader = new FileReader();
      var name = file.name;

      var extension = file.name.split('.').pop().toLowerCase();
      var pdfPreview = $('.pdfPreview');

      reader.onload = function(e) {
        var img = new Image();
        img.src = reader.result;
        
        $('.uploaded-file-container').append(uploadedImageTemplate)
        $('.uploaded-thumb-block').html(img);
        $('.name').html(name)

        if(extension == 'pdf') {
          $('.uploaded-thumb-block').parents('div').find(pdfPreview).removeClass('hidden-preview');
        } else {
          $('.uploaded-thumb-block').parents('div').find(pdfPreview).addClass('hidden-preview');
        }
      }
      
      reader.readAsDataURL(file);

    });

    $('.uploaded-file-container').on('click', '.remove-preview', function(event) {
      event.preventDefault();
      $('#id_verification_image').val('');
      $(this).parents('div').find('.uploaded-file').remove();
    });

    if($('.existing_photo_record').length === 0) {
      $('.uploading-block').show();
    }
  });