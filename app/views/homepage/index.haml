- content_for :javascript do
  initialize_homepage();

- content_for :coverfade_class do
  = "without-text"

- content_for :extra_javascript do
  - # maps.google can't be loaded twice
  - maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
  - key_param = maps_key ? "&key=#{maps_key}" : ""
  - # Topbar adds its own maps script, otherwise add it if location search enabled or map is visible
  -# - needs_maps = !FeatureFlagHelper.feature_enabled?(:topbar_v1) && (main_search != :keyword || @view_type.eql?("map"))
  -# - if(needs_maps)
  = javascript_include_tag "//maps.googleapis.com/maps/api/js?libraries=places#{key_param}"
  -# - if(@view_type.eql?("map"))
  = javascript_include_tag "markerclusterer.js"

- content_for :title_header do
  - is_homepage = params[:controller] == "homepage" && params[:action] == "index"
  - if @big_cover_photo
    - hidden_slogan = !@current_community.show_slogan? ? "hidden-title-part" : ""
    - hidden_description = !@current_community.show_description? ? "hidden-title-part" : ""
    %h1.marketplace-lander-content-title{class: hidden_slogan}= community_slogan.html_safe
    %p.marketplace-lander-content-description{class: hidden_description}= community_description.html_safe
    - unless is_homepage && !@current_community.private? && FeatureFlagHelper.feature_enabled?(:topbar_v1)
      .search-form
        - if @current_community.private?
          %a.inline-big-button{href: sign_up_path}
            .content
              = t("layouts.application.connect")
        - else
          - if(main_search == :location)
            = render partial: "location_bar"
          - else
            = render partial: "search_bar"
  - elsif !(is_homepage && FeatureFlagHelper.feature_enabled?(:topbar_v1))
    .browse-view-search-form
      - if(main_search == :location)
        = render partial: "location_bar"
      - else
        = render partial: "search_bar"

- content_for(:head) do
  - if seo_pagination_links[:prev].present?
    %link{rel: "prev", href: seo_pagination_links[:prev]}
  - if seo_pagination_links[:next].present?
    %link{rel: "next", href: seo_pagination_links[:next]}

- if @current_community.private? && @big_cover_photo
  - if @community_customization && @community_customization.private_community_homepage_content
    .community-customization-wrapper
      = @community_customization.private_community_homepage_content.html_safe
  - else
    = t(".this_is_private_community")

- else

  .home-toolbar
    .wrapper-inner
      .search-holder
        = render partial: "custom_search"
      .filter-btns-holder.row
        .col-2.book-immediately.checkbox-item.no-pseudo
          = check_box_tag :book_immed, nil, false, class: 'input'
          = label_tag :book_immed, 'Book Immediately', class: 'btn btn--green-transp label'
        .col-2.schedule-holder.filters-holder
          .schedule-btn.dropdown-btn.filter-title-btn
            .btn.btn--green-transp.toggle-btn{'data-default'=>'Schedule - Any', 'data-selected' => 'Schedule Selected' } Schedule - Any
          .schedule-data.filter-dropdown
            .chosen Monday and Wednesday Evenings
            .option-container
              .option-item
                .checkbox-holder
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :mon, :mon, false, class: 'input'
                    = label_tag :mon, 'M', class: 'btn btn--green-transp label'
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :tus, :tus, false, class: 'input'
                    = label_tag :tus, 'Tu', class: 'btn btn--green-transp label'
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :wed, :wed, false, class: 'input'
                    = label_tag :wed, 'W', class: 'btn btn--green-transp label'
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :thur, :thur, false, class: 'input'
                    = label_tag :thur, 'Th', class: 'btn btn--green-transp label'
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :fr, :fr, false, class: 'input'
                    = label_tag :fr, 'F', class: 'btn btn--green-transp label'
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :sat, :sat, false, class: 'input'
                    = label_tag :sat, 'Sa', class: 'btn btn--green-transp label'
                  .checkbox-item.no-pseudo.days
                    = check_box_tag :sun, :sun, false, class: 'input'
                    = label_tag :sun, 'Su', class: 'btn btn--green-transp label'
                .checkbox-holder
                  .checkbox-item.day-time.default-checkbox
                    = check_box_tag :mornings, :mornings, false, class: 'input'
                    = label_tag :mornings, 'Mornings', class: 'label'
                  .checkbox-item.day-time.default-checkbox
                    = check_box_tag :afternoons, :afternoons, false, class: 'input'
                    = label_tag :afternoons, 'Afternoons', class: 'label'
                  .checkbox-item.day-time.default-checkbox
                    = check_box_tag :evenings, :evenings, false, class: 'input'
                    = label_tag :evenings, 'Evenings', class: 'label'
            .another-option-block
              = button_tag '+ Add another option', type: 'button', class: 'another-btn', id: 'add_new_option'
            .filter-action-holder
              = submit_tag 'Apply', id: 'apply_btn', class: 'link'
              = button_tag 'Clear', id: 'clear_btn', type: 'button', class: 'link gray'

        .col-2.price-range-holder
          .dropdown-btn.filter-title-btn
            .btn.btn--green-transp.toggle-btn{'data-default'=>'Price Range - Any', 'data-selected' => ''} Price Range - Any
          .price-data.filter-dropdown
            = render :partial => "price_filter"
            .filter-action-holder
              = submit_tag 'Apply', id: 'apply_btn', class: 'link'
              = button_tag 'Clear', id: 'clear_btn', type: 'button', class: 'link gray'

        .col-2.class-type-holder.filters-holder
          .class-type-btn.dropdown-btn.filter-title-btn
            .btn.btn--green-transp.toggle-btn{'data-default'=>'Class Type - Any', 'data-selected' => 'Class Type Selected' } Class Type - Any
          .class-type-data.filter-dropdown
            .checkbox-holder
              .checkbox-item.default-checkbox
                = check_box_tag :one_done, nil, false, class: 'input'
                = label_tag :one_done, 'One and Done', class: 'label'
              .checkbox-item.default-checkbox
                = check_box_tag :pay_you_go, nil, false, class: 'input'
                = label_tag :pay_you_go, 'Pay as You Go', class: 'label'
              .checkbox-item.default-checkbox
                = check_box_tag :committed, nil, false, class: 'input'
                = label_tag :committed, 'Committed', class: 'label'
              .checkbox-item.default-checkbox
                = check_box_tag :any, nil, false, class: 'input'
                = label_tag :any, 'Any', class: 'label'
            .filter-action-holder
              = submit_tag 'Apply', id: 'apply_btn', class: 'link'
              = button_tag 'Clear', id: 'clear_btn', type: 'button', class: 'link gray'
            = link_to 'Iâ€™d like to know more about Class Types', '#', class: 'link'


        .col-2.more-options-holder
          .more-options-btn
            .btn.btn--green More Options
        .filter-data.filter-dropdown
          %h3.filter-title More options
          .location-holder.filter-data-item
            .custom-filter-title Location
            .location-item
              Whithin 
              = text_field_tag :distance_from, '', class: 'distance-input'
              km of
              = text_field_tag :location_city, '', class: 'location-input'
          = render :partial => "filters", :locals => { show_price_filter: show_price_filter, show_custom_fields: @show_custom_fields, filters: filters }
          .filter-action-holder
            = submit_tag 'Apply', id: 'apply_btn', class: 'link'
            = button_tag 'Clear', id: 'clear_btn', type: 'button', class: 'link gray'

      .home-toolbar-button-group{:class => listing_shape_menu_enabled || @category_menu_enabled ? "filters-enabled" : ""}
        - ["grid", "map"].each do |view_type|
          - selected_class = @view_type == view_type ? "selected" : ""
          = link_to search_path(search_params.merge(view: view_type)), :class => "home-toolbar-button-group-button #{selected_class}", :title => t("homepage.filters.#{view_type}_button") do
            = icon_tag(view_type, ["icon-fix", "home-button-group-icon"])
            %span.home-toolbar-button-text
              = t("homepage.filters.#{view_type}_button")
      
      - if listing_shape_menu_enabled || @category_menu_enabled
        .home-toolbar-filters.home-toolbar-filters-mobile-hidden#home-toolbar-filters
          - if listing_shape_menu_enabled
            .toggle-container.home-toolbar-toggle-container
              .home-toolbar-share-type-menu.toggle-menu.hidden
                = link_to t("homepage.filters.all_listing_types"), search_path(search_params.merge({transaction_type: "all"}))
                - shapes.each do |shape|
                  = link_to search_path(search_params.merge({transaction_type: shape[:name]})), class:  "toggle-menu-subitem" do
                    = t(shape[:name_tr_key])

          - if @show_categories
            .toggle-container.home-toolbar-toggle-container.hidden-tablet
              .toggle.with-borders{data: {toggle: '#home-toolbar-categories-menu'}}
                .toggle-header-container
                  .toggle-header
                    - if selected_category
                      = selected_category.display_name(I18n.locale)
                    - else
                      = t("homepage.filters.all_categories")

                  = icon_tag("dropdown", ["icon-dropdown"])
              #home-toolbar-categories-menu.toggle-menu
                = link_to t("homepage.filters.all_categories"), search_path(search_params.merge({category: "all"}))
                - @main_categories.each do |category|
                  = link_to category.display_name(I18n.locale), search_path(search_params.merge({category: category}))
                  - if category.children
                    - category.children.each do |child|
                      - is_selected = selected_category == child
                      = link_to child.display_name(I18n.locale), search_path(search_params.merge({category: child})), :class => "toggle-menu-subitem"
    
  .search-result-container
    .wrapper-inner
      .row
        %div{:class => 'col-9 listings-main-container'}
          %h3.search-title Search Results
          - if @listings.total_entries > 0
            - if @view_type.eql?("map")
              .home-map.map-mobile
                = render :partial => "map", locals: { viewport: viewport }
            - else
              - if @view_type.eql?("grid")
                %div{class: "home-fluid-thumbnail-grid-wide search-listings-list"}
                  .home-fluid-thumbnail-grid
                    = render partial: "grid_item", collection: @listings, as: :listing, locals: { show_distance: location_search_in_use }
              -# - else
              -#   .home-listings
              -#     - if (location_search_in_use)
              -#       = render partial: "list_item_with_distance", collection: @listings, as: :listing, locals: { shape_name_map: shape_name_map, show_distance: location_search_in_use }
              -#     - else
              -#       = render partial: "list_item", collection: @listings, as: :listing, locals: { shape_name_map: shape_name_map }
              .home-loading-more
                = will_paginate(@listings)
                - item_container = if @view_type.eql?("grid") then '.home-fluid-thumbnail-grid' else '.home-listings' end
                = pageless(@listings.total_pages, item_container, current_search_path_without_page, t('.loading_more_content'), current_page)
          - else
            .home-no-listings
              - if params[:q] || params[:category] || params[:share_type] # Some filter in use
                = t(".no_listings_with_your_search_criteria")
              - else
                = t(".no_listings_notification",
                      add_listing_link: link_to(t(".add_listing_link_text"),
                      new_listing_path(ref: "add_listing_link"))).html_safe
        
        .custom-map-desktop.col-3
          .home-map#home-map
            = render :partial => "map", locals: { viewport: viewport }
